2018-04-02
db.competition.update({"code":"KLCL"}, {$set:{"code":"KL1"}}, {multi:true})
db.competition.update({"code":"KLCH"}, {$set:{"code":"KL2"}}, {multi:true})
db.attendanceClub.update({"league":"KLCL"}, {$set:{"league":"KL1"}}, {multi:true})
db.attendanceClub.update({"league":"KLCH"}, {$set:{"league":"KL2"}}, {multi:true})
db.article.update({"category":"CLASSIC"}, {$set:{"category":"KL1"}}, {multi:true})
db.article.update({"category":"CHALLENGE"}, {$set:{"category":"KL2"}}, {multi:true})

v0.7.14 / 2017-11-02
// sourceType 필드 삭제
db.gallery.update({}, {$unset:{"sourceType":""}}, {multi:true})
// db reference 삭제
db.userPicture.update({}, {$unset:{"user":""}}, {multi:true})

v0.7.13 / 2017-10-14
// views 필드 삭제
db.gallery.update({}, {$unset:{"views":""}}, {multi:true})
db.gallery.update({}, {$unset:{"usersLiking":""}}, {multi:true})
db.gallery.update({}, {$unset:{"usersDisliking":""}}, {multi:true})
// collection 이름 변경
db.boardFree.renameCollection("article")
db.boardFreeComment.renameCollection("articleComment")
db.article.update({}, {$set:{"_class":"com.jakduk.api.model.db.Article"}}, {multi:true})
db.articleComment.update({}, {$set:{"_class":"com.jakduk.api.model.db.ArticleComment"}}, {multi:true})
db.article.update({"category":"FREE"}, {$set:{"board":"FREE"}}, {multi:true})
db.article.update({"category":"FOOTBALL"}, {$set:{"board":"FOOTBALL", "category":"CLASSIC"}}, {multi:true})
db.articleComment.update({}, {$rename:{"boardItem":"article"}}, {multi:true})
// 혹시 board가 없으면 FREE로 설정
db.article.update({"board":{$exists:false}}, {$set:{"board":"FREE"}}, {multi:true})
db.article.update({"board":"FREE"}, {$unset:{"category":""}}, {multi:true})
// 여러번 시도
db.gallery.update({'linkedItems.from':'BOARD_FREE'}, {$set:{'linkedItems.$.from':'ARTICLE'}}, {multi:true})
db.gallery.update({'linkedItems.from':'BOARD_FREE_COMMENT'}, {$set:{'linkedItems.$.from':'ARTICLE_COMMENT'}}, {multi:true})
// 댓글에 게시물의 게시판 추가
db.articleComment.find({}).forEach(function(comment){
    db.articleComment.updateOne({_id:comment._id}, {$set:{"article.board":db.article.findOne({_id:comment.article._id}).board}});
});

v0.7.12 / 2017-07-28
// linkedGallery 필드가 없는 경우도 있어서 기본 false로 추가함.
db.boardFreeComment.update({"linkedGallery":{$exists:false}}, {$set:{"linkedGallery":false}}, {multi:true})
// history -> logs
db.boardFreeComment.update( {}, { $rename: { 'history': 'logs'} }, {multi:true} )
db.boardFree.update( {}, { $rename: { 'history': 'logs'} }, {multi:true} )

Version 0.7.9 / 2017-04-23
// 사진 posts -> linkedItems 으로 인한 posts 필드 지움
db.gallery.update({}, {$unset:{"posts":""}}, {multi:true})
db.boardFree.update({}, {$unset:{"galleries":""}}, {multi:true})

Version 0.7.6 / 2016-12-11

// token TTL 설정
db.token.ensureIndex( { "expireAt": 1 }, { expireAfterSeconds: 0 } )

Version 0.7.0 / 2016-07-27

// 자유게시판 말머리 enum으로 변경.
db.boardFree.update({"categoryName":"football"}, {$set:{"category":"FOOTBALL"}}, {multi:true})
db.boardFree.update({"categoryName":"free"}, {$set:{"category":"FREE"}}, {multi:true})
db.boardFree.update({"categoryName":"develop"}, {$set:{"category":"FREE"}}, {multi:true})
db.boardFree.update({}, {$unset:{"categoryName":""}}, {multi:true})

// 디바이스 enum으로 변경.
db.boardFree.update({'status.device':'normal'}, {$set:{'status.device':'NORMAL'}}, {multi:true})
db.boardFree.update({'status.device':'mobile'}, {$set:{'status.device':'MOBILE'}}, {multi:true})
db.boardFree.update({'status.device':'tablet'}, {$set:{'status.device':'TABLET'}}, {multi:true})
db.boardFree.update({'status.delete':'delete'}, {$set:{'status.delete':true}}, {multi:true})
db.boardFree.update({'status.notice':'notice'}, {$set:{'status.notice':true}}, {multi:true})
db.boardFreeComment.update({'status.device':'normal'}, {$set:{'status.device':'NORMAL'}}, {multi:true})
db.boardFreeComment.update({'status.device':'mobile'}, {$set:{'status.device':'MOBILE'}}, {multi:true})
db.boardFreeComment.update({'status.device':'tablet'}, {$set:{'status.device':'TABLET'}}, {multi:true})
db.jakduComment.update({'status.device':'normal'}, {$set:{'status.device':'NORMAL'}}, {multi:true})
db.jakduComment.update({'status.device':'mobile'}, {$set:{'status.device':'MOBILE'}}, {multi:true})
db.jakduComment.update({'status.device':'tablet'}, {$set:{'status.device':'TABLET'}}, {multi:true})

// 글 이력 enum으로 변경. (여러번 시도해야 전부 업데이트 가능)
db.boardFree.update({'history.type':'create'}, {$set:{'history.$.type':'CREATE'}}, {multi:true})
db.boardFree.update({'history.type':'delete'}, {$set:{'history.$.type':'DELETE'}}, {multi:true})
db.boardFree.update({'history.type':'edit'}, {$set:{'history.$.type':'EDIT'}}, {multi:true})
db.boardFree.update({'history.type':'notice'}, {$set:{'history.$.type':'ENABLE_NOTICE'}}, {multi:true})
db.boardFree.update({'history.type':'c.notice'}, {$set:{'history.$.type':'DISABLE_NOTICE'}}, {multi:true})

// 사진 상태 enum으로 변경.
db.gallery.update({'status.from':'freeBoard'}, {$set:{'status.from':'BOARD_FREE'}}, {multi:true})
db.gallery.update({'status.status':'temp'}, {$set:{'status.status':'TEMP'}}, {multi:true})
db.gallery.update({'status.status':'use'}, {$set:{'status.status':'ENABLE'}}, {multi:true})

// sequence enum으로 변경.
db.sequence.update({'name':'freeBoard'}, {$set:{'name':'BOARD_FREE'}});

Version 0.6.1 / 2016-05-07

// JakduK 계정의 providerId 추가
db.boardFree.update({'writer.type':{$in:['JAKDUK', 'jakduk']}}, {$set:{'writer.providerId':'JAKDUK'}}, {multi:true})
db.boardFreeComment.update({'writer.type':{$in:['JAKDUK', 'jakduk']}}, {$set:{'writer.providerId':'JAKDUK'}}, {multi:true})
db.gallery.update({'writer.type':{$in:['JAKDUK', 'jakduk']}}, {$set:{'writer.providerId':'JAKDUK'}}, {multi:true})

// Daum 계정의 providerId 추가
db.boardFree.update({'writer.type':{$in:['DAUM', 'daum']}}, {$set:{'writer.providerId':'DAUM'}}, {multi:true})
db.boardFreeComment.update({'writer.type':{$in:['DAUM', 'daum']}}, {$set:{'writer.providerId':'DAUM'}}, {multi:true})
db.gallery.update({'writer.type':{$in:['DAUM', 'daum']}}, {$set:{'writer.providerId':'DAUM'}}, {multi:true})

// Facebook 계정의 providerId 추가
db.boardFree.update({'writer.type':{$in:['FACEBOOK', 'facebook']}}, {$set:{'writer.providerId':'FACEBOOK'}}, {multi:true})
db.boardFreeComment.update({'writer.type':{$in:['FACEBOOK', 'facebook']}}, {$set:{'writer.providerId':'FACEBOOK'}}, {multi:true})
db.gallery.update({'writer.type':{$in:['FACEBOOK', 'facebook']}}, {$set:{'writer.providerId':'FACEBOOK'}}, {multi:true})

Version 0.6.0 / 2016-05-01

// JakduK 계정으로 가입한 회원 정보에 providerId : JAKDUK를 추가한다.
db.user.update({'oauthUser' : {$exists: false}, 'providerId' : {$exists: false}}, {$set:{'providerId':'JAKDUK'}}, {multi:true})

// 다음 계정으로 가입한 회원 정보에 providerId : DAUM을 추가한다.
db.user.update({'oauthUser.type' : 'daum'}, {$set:{'providerId':'DAUM'}}, {multi:true})

// 페이스북 계정으로 가입한 회원 정보에 providerId : FACEBOOK을 추가한다.
db.user.update({'oauthUser.type' : 'facebook'}, {$set:{'providerId':'FACEBOOK'}}, {multi:true})

// SNS 계정으로 가입한 회원 정보에 providerUserId : 해당 oauthUser.oauthId를 추가한다.
db.user.find({'oauthUser' : {$exists: true}}).forEach(function(doc){
       db.user.update({_id:doc._id}, {$set:{"providerUserId":doc.oauthUser.oauthId}});
});